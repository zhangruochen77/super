{"ast":null,"code":"// 引入 axios\nimport axios from 'axios';\nconst service = axios.create({\n  baseURL: 'http://localhost',\n  timeout: 15000 // 请求超时时间\n\n}); // 设置响应接口\n\naxios.interceptors.response.use(success => {\n  // 访问到了后端的接口，需要判断是否逻辑正确\n  // 判断业务逻辑\n  if (success.status && success.status === 200) {\n    // 返回的信息会被封装在 success.data 对象当中 该对象中一般会设置状态码，信息，数据等等信息\n    // 如果访问失败，可以直接返回空\n    return;\n  }\n\n  return success; // 正常接收到结构 需要将对象返回\n}, error => {\n  // 直接错误响应，直接服务器都不让进行访问\n  // 错误的情况下，没有返回的响应对象的，直接在 error 里面就包含了错误码信息\n  // 做信息提示， 指定路由跳转页面信息\n  if (error.response.code === 500) {// 对应提示服务器错误\n  } // ...\n\n\n  return;\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","timeout","interceptors","response","use","success","status","error","code"],"sources":["D:/code/js/project/web-logistics/src/utils/request.js"],"sourcesContent":["// 引入 axios\r\nimport axios from 'axios'\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://localhost',\r\n    timeout: 15000 // 请求超时时间\r\n})\r\n\r\n// 设置响应接口\r\naxios.interceptors.response.use(success => {  // 访问到了后端的接口，需要判断是否逻辑正确\r\n\r\n    // 判断业务逻辑\r\n    if (success.status && success.status === 200) {\r\n        // 返回的信息会被封装在 success.data 对象当中 该对象中一般会设置状态码，信息，数据等等信息\r\n\r\n        // 如果访问失败，可以直接返回空\r\n        return\r\n    }\r\n\r\n    return success  // 正常接收到结构 需要将对象返回\r\n}, error => {   // 直接错误响应，直接服务器都不让进行访问\r\n    // 错误的情况下，没有返回的响应对象的，直接在 error 里面就包含了错误码信息\r\n    // 做信息提示， 指定路由跳转页面信息\r\n    if (error.response.code === 500) {\r\n        // 对应提示服务器错误\r\n    }\r\n    // ...\r\n\r\n    return\r\n})\r\n\r\nexport default service"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;EACzBC,OAAO,EAAE,kBADgB;EAEzBC,OAAO,EAAE,KAFgB,CAEV;;AAFU,CAAb,CAAhB,C,CAKA;;AACAJ,KAAK,CAACK,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,OAAO,IAAI;EAAG;EAE1C;EACA,IAAIA,OAAO,CAACC,MAAR,IAAkBD,OAAO,CAACC,MAAR,KAAmB,GAAzC,EAA8C;IAC1C;IAEA;IACA;EACH;;EAED,OAAOD,OAAP,CAVuC,CAUvB;AACnB,CAXD,EAWGE,KAAK,IAAI;EAAI;EACZ;EACA;EACA,IAAIA,KAAK,CAACJ,QAAN,CAAeK,IAAf,KAAwB,GAA5B,EAAiC,CAC7B;EACH,CALO,CAMR;;;EAEA;AACH,CApBD;AAsBA,eAAeV,OAAf"},"metadata":{},"sourceType":"module"}